load ../../systems/ibos-sop-pred-nou.maude
load ../test-cc.maude

set print conceal on .
print conceal mod_is_sorts_._____endm fmod_is_sorts_.____endfm .

fmod AACRPO-PROFILE-TEST is
  pr CONG-CLOSURE-LIB .

  var IDS VS : QidSet .
  var T T' : Term .
  var M UM : Module .
  var S : Substitution .
  var ES : EquationSet .
  var Q : Qid .
  var TL : TypeList .
  var TY : Type .
  var A : AttrSet .
  var O O' : OpDecl .
  var OS : OpDeclSet .

  --- This 4-tuple contains:
  --- [a] the module after processing - adding fresh constants and updating the symbol total order
  --- [b] the module after processing and unsortification
  --- [c] the substitution that maps variables into freshly generated constants
  --- [d] the id equations generated after id axiom removal
  sort CCData .
  op ((_,_,_,_)) : Module Module Substitution EquationSet -> CCData [ctor] .
  ---
  op getOSMod : CCData -> Module .
  op getUSMod : CCData -> Module .
  eq getOSMod((M,UM,S,ES)) = M .
  eq getUSMod((M,UM,S,ES)) = UM .

  --- AAC-RPO compWithOrd Module Pre-processing
  --- Step 1: extract the id symbols, validate operator ordering
  op prepCC : Module QidSet -> CCData [memo] .
  eq prepCC(M,VS) = prepCC(M,ccModData(M),VS) .

  --- Step 2: [a] convert variables that appear in our terms into fresh constants
  ---         [b] insert fresh constants into our module and total order between ctors and defined symbols
  op prepCC : Module QidSet VariableSet -> CCData .
  eq prepCC(M,IDS,VS) = prepCC(enrichModuleForCongClosure(M,| IDS |,VS)) .

  --- Step 3: remove the system attributes for Booleans and perform unsortification (in case we need that step)
  op prepCC : CCResult -> CCData .
  eq prepCC((M,S,ES)) = (removeComm(pruneBool(getSig(M))),unsortify(pruneBool(getSig(M))),S,ES) .

  --- Memoized version of aac-compWithOrd
  op aacTrans : Module -> Module [memo] .
  eq aacTrans(M) = aac-compWithOrd(M) .

  --- Comparsion using the order-sorted module
  op _>AAC!{_}_ : Term Module Term -> Bool .
  op _>AAC!{_}_ : Term CCData Term -> Bool .
  ---
  eq T >AAC!{M}           T' = T        >AAC!{prepCC(M,vars((T,T')))} T' .
  eq T >AAC!{(M,UM,S,ES)} T' = (T << S) >AAC2{M}                     (T' << S) .

  --- Comparison after translation to an unsorted module
  op _>AAC!U{_}_ : Term Module Term -> Bool .
  op _>AAC!U{_}_ : Term CCData Term -> Bool .
  ---
  eq T >AAC!U{M}           T' = T                   >AAC!U{prepCC(M,vars((T,T')))} T' .
  eq T >AAC!U{(M,UM,S,ES)} T' = unsortify(M,T << S) >AAC2{UM}                      unsortify(M,T' << S) .

  --- NOTE: equivalent to _>AAC{_}_ (but uses a memoized module tranformation)
  op _>AAC2{_}_ : Term Module Term -> Bool .
  eq T >AAC2{M} T' = if (getTerm(metaReduce(aacTrans(M),'_>E_['`[`[_`]`][T],'`[`[_`]`][T']])) == 'true.OBool) then true else false fi .

  op removeComm : Module -> Module .
  eq removeComm(M) = setOps(M,removeComm(getOps(M))) .

  op removeComm : OpDeclSet -> OpDeclSet .
  eq removeComm(none)    = none .
  eq removeComm(O O' OS) = removeComm(O) removeComm(O' OS) .
  eq removeComm(op Q : TL -> TY [comm A].) = (op Q : TL -> TY [A] .) .
  eq removeComm(op Q : TL -> TY [A].)      = (op Q : TL -> TY [A] .) [owise] .
endfm

--- Shared Initialization
red prepCC(upModule('IBOS-SOP-PRED-NOID,true),
  vars('netlabelpair-by-pid['NI&91:ConcNetProcId,'&66:NetProcInfoSet]) ;
  vars('`(_`,_`)['&101:Label,'url['&110:Nat]])) .

--- Unsorted AAC-RPO module construction
red aacTrans(getUSMod(
prepCC(upModule('IBOS-SOP-PRED-NOID,true),
  vars('netlabelpair-by-pid['NI&91:ConcNetProcId,'&66:NetProcInfoSet]) ;
  vars('`(_`,_`)['&101:Label,'url['&110:Nat]]))
)) .

--- Order-sorted AAC-RPO module construction
red aacTrans(getOSMod(
prepCC(upModule('IBOS-SOP-PRED-NOID,true),
  vars('netlabelpair-by-pid['NI&91:ConcNetProcId,'&66:NetProcInfoSet]) ;
  vars('`(_`,_`)['&101:Label,'url['&110:Nat]]))
)) .

--- OS comparison
red ('netlabelpair-by-pid['NI&91:ConcNetProcId,'&66:NetProcInfoSet] >AAC!{upModule('IBOS-SOP-PRED-NOID,true)} '`(_`,_`)['&101:Label,'url['&110:Nat]]) .
--- OS comparison (2nd run)
red ('netlabelpair-by-pid['NI&91:ConcNetProcId,'&66:NetProcInfoSet] >AAC!{upModule('IBOS-SOP-PRED-NOID,true)} '`(_`,_`)['&101:Label,'url['&110:Nat]]) .

--- US comparison
red ('netlabelpair-by-pid['NI&91:ConcNetProcId,'&66:NetProcInfoSet] >AAC!U{upModule('IBOS-SOP-PRED-NOID,true)} '`(_`,_`)['&101:Label,'url['&110:Nat]]) .
--- US comparison (2nd run)
red ('netlabelpair-by-pid['NI&91:ConcNetProcId,'&66:NetProcInfoSet] >AAC!U{upModule('IBOS-SOP-PRED-NOID,true)} '`(_`,_`)['&101:Label,'url['&110:Nat]]) .

--- Format: (Rewrites) Milliseconds
--- 
--- Step 1:
--- Order-sorted: (3250063) 2950
--- Unsorted: (1573553) 1300
--- 
--- Step 2:
--- Order-sorted: (29) 7
--- Unsorted: (398) 6577
