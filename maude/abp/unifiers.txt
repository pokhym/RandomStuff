The command below calculates the unifiers of the two terms:

red safeDisjUnifiers(upModule('ABP,true), stringToTerm(upModule('ABP,true), "(N:iNat : B:Bit > BPQ:BitPacketQueue | B'':Bit , BQ:BitQueue < B':Bit : NL:iNatList)") =? stringToTerm(upModule('ABP,true), "(NN:iNat : BB:Bit > BBPPQQ:BitPacketQueue | BBQQ:BitQueue < BB':Bit : NNLL:iNatList)")) .

The ouput from Maude is:

rewrites: 1398 in 6ms cpu (6ms real) (233000 rewrites/second)
result SubstitutionPair: (
  'B'':Bit <- '#6:Bit ; 
  'B':Bit <- '#4:Bit ; 
  'B:Bit <- '#2:Bit ; 
  'BPQ:BitPacketQueue <- '#3:BitPacketQueue ; 
  'BQ:BitQueue <- '#7:BitQueue ; 
  'N:iNat <- '#1:iNat ; 
  'NL:iNatList <- '#5:iNatList,
  'BB':Bit <- '#4:Bit ; 
  'BB:Bit <- '#2:Bit ; 
  'BBPPQQ:BitPacketQueue <- '#3:BitPacketQueue ; 
  'BBQQ:BitQueue <- '_`,_['#6:Bit,'#7:BitQueue] ; 
  'NN:iNat <- '#1:iNat ; 
  'NNLL:iNatList <- '#5:iNatList)

red safeDisjUnifiers(upModule('ABP,true), stringToTerm(upModule('ABP,true), "(N:iNat : B:Bit > BP:BitPacket ; BPQ:BitPacketQueue | BQ:BitQueue < B':Bit : NL:iNatList)") =? stringToTerm(upModule('ABP,true), "(NN:iNat : BB:Bit > BBPPQQ:BitPacketQueue | BBQQ:BitQueue < BB':Bit : NNLL:iNatList)")) .

rewrites: 319 in 2ms cpu (2ms real) (159500 rewrites/second)
result SubstitutionPair: (
  'B':Bit <- '#4:Bit ; 
  'B:Bit <- '#2:Bit ; 
  'BP:BitPacket <- '#6:BitPacket ; 
  'BPQ:BitPacketQueue <- '#7:BitPacketQueue ; 
  'BQ:BitQueue <- '#3:BitQueue ; 
  'N:iNat <- '#1:iNat ; 
  'NL:iNatList <- '#5:iNatList,
  'BB':Bit <- '#4:Bit ; 
  'BB:Bit <- '#2:Bit ; 
  'BBPPQQ:BitPacketQueue <- '_;_['#6:BitPacket,'#7:BitPacketQueue] ; 
  'BBQQ:BitQueue <- '#3:BitQueue ; 
  'NN:iNat <- '#1:iNat ; 
  'NNLL:iNatList <- '#5:iNatList)

Pretty sure that we should calculate the unifiers for all lhs of the rules but I'm not sure how to incorporate these into the proof of the invariant. I know
Jose said something about this but I don't think I wrote it down.... I think what we want to do is write the term of our invariant (for each of the specific rules) 
as the term obtain by unifying the general pattern with the specific lhs of the rule we are currently working on. 



(
  (false =/= true \/ true =/= good-bit-queue(&30:BitQueue,off) and all-packets(&31:BitPacketQueue,on,s &29:iNat) /\ true = good-bit-queue(&30:BitQueue,off) and 
  (((on ~B &27:Bit) and (&28:iNat ~iN(s &29:iNat))) and all-packets(&31:BitPacketQueue,on,s &29:iNat)))
    /\ false = true
)

this is the output

 [264   | [0 : off > &31:BitPacketQueue | &29:BitQueue < off : &30:NeiNatList] ||| ((false =/= true \/ true =/= all-bits(&29:BitQueue,off)and good-packet-queue(&31:BitPacketQueue,off,0)/\ true = all-bits(&29:BitQueue,off)and
    good-packet-queue((&27:Bit,&28:iNat); &31:BitPacketQueue,off,0))/\ false = true) => [N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList] |||  true = good-queues(N&37:iNat : B&33:Bit >
    B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)/\ true = inv(N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)]
       [265   | [s &29:iNat : off > &32:BitPacketQueue | &30:BitQueue < off : &31:NeiNatList] ||| ((true =/= all-bits(&30:BitQueue,off)and good-packet-queue(&32:BitPacketQueue,off,s &29:iNat)\/ true =/= &31:NeiNatList ~iNL gen-list(
    &29:iNat)/\ true = &31:NeiNatList ~iNL gen-list(&29:iNat))/\ true = all-bits(&30:BitQueue,off)and good-packet-queue((&27:Bit,&28:iNat); &32:BitPacketQueue,off,s &29:iNat)) => [N&38:iNat : B&34:Bit > B&35:BitPacketQueue |
    B&36:BitQueue < B&33:Bit : N&37:iNatList] |||  true = good-queues(N&38:iNat : B&34:Bit > B&35:BitPacketQueue | B&36:BitQueue < B&33:Bit : N&37:iNatList)/\ true = inv(N&38:iNat : B&34:Bit > B&35:BitPacketQueue | B&36:BitQueue <
    B&33:Bit : N&37:iNatList)]
       [266   | [0 : off > &31:BitPacketQueue | &29:BitQueue < on : &30:NeiNatList] ||| ((true =/= good-bit-queue(&29:BitQueue,on)and all-packets(&31:BitPacketQueue,off,0)\/ true =/= 0 ~iNL &30:NeiNatList /\ true = 0 ~iNL
    &30:NeiNatList)/\ true = good-bit-queue(&29:BitQueue,on)and(((off ~B &27:Bit)and(0 ~iN &28:iNat))and all-packets(&31:BitPacketQueue,off,0))) => [N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList]
    |||  true = good-queues(N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)/\ true = inv(N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)]
       [267   | [s &29:iNat : off > &32:BitPacketQueue | &30:BitQueue < on : &31:NeiNatList] ||| ((true =/= good-bit-queue(&30:BitQueue,on)and all-packets(&32:BitPacketQueue,off,s &29:iNat)\/ true =/= &31:NeiNatList ~iNL((s
    &29:iNat)gen-list(&29:iNat))/\ true = &31:NeiNatList ~iNL((s &29:iNat)gen-list(&29:iNat)))/\ true = good-bit-queue(&30:BitQueue,on)and(((off ~B &27:Bit)and(&28:iNat ~iN(s &29:iNat)))and all-packets(&32:BitPacketQueue,off,s
    &29:iNat))) => [N&38:iNat : B&34:Bit > B&35:BitPacketQueue | B&36:BitQueue < B&33:Bit : N&37:iNatList] |||  true = good-queues(N&38:iNat : B&34:Bit > B&35:BitPacketQueue | B&36:BitQueue < B&33:Bit : N&37:iNatList)/\ true = inv(
    N&38:iNat : B&34:Bit > B&35:BitPacketQueue | B&36:BitQueue < B&33:Bit : N&37:iNatList)]
       [268   | [0 : on > &31:BitPacketQueue | &29:BitQueue < off : &30:NeiNatList] ||| ((true =/= good-bit-queue(&29:BitQueue,off)and all-packets(&31:BitPacketQueue,on,0)\/ true =/= 0 ~iNL &30:NeiNatList /\ true = 0 ~iNL
    &30:NeiNatList)/\ true = good-bit-queue(&29:BitQueue,off)and(((on ~B &27:Bit)and(0 ~iN &28:iNat))and all-packets(&31:BitPacketQueue,on,0))) => [N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList]
    |||  true = good-queues(N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)/\ true = inv(N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)]
       [269   | [s &29:iNat : on > &32:BitPacketQueue | &30:BitQueue < off : &31:NeiNatList] ||| ((true =/= good-bit-queue(&30:BitQueue,off)and all-packets(&32:BitPacketQueue,on,s &29:iNat)\/ true =/= &31:NeiNatList ~iNL((s
    &29:iNat)gen-list(&29:iNat))/\ true = &31:NeiNatList ~iNL((s &29:iNat)gen-list(&29:iNat)))/\ true = good-bit-queue(&30:BitQueue,off)and(((on ~B &27:Bit)and(&28:iNat ~iN(s &29:iNat)))and all-packets(&32:BitPacketQueue,on,s &29:iNat)))
    => [N&38:iNat : B&34:Bit > B&35:BitPacketQueue | B&36:BitQueue < B&33:Bit : N&37:iNatList] |||  true = good-queues(N&38:iNat : B&34:Bit > B&35:BitPacketQueue | B&36:BitQueue < B&33:Bit : N&37:iNatList)/\ true = inv(N&38:iNat :
    B&34:Bit > B&35:BitPacketQueue | B&36:BitQueue < B&33:Bit : N&37:iNatList)]
       [270   | [0 : on > &31:BitPacketQueue | &29:BitQueue < on : &30:NeiNatList] ||| ((false =/= true \/ true =/= all-bits(&29:BitQueue,on)and good-packet-queue(&31:BitPacketQueue,on,0)/\ true = all-bits(&29:BitQueue,on)and
    good-packet-queue((&27:Bit,&28:iNat); &31:BitPacketQueue,on,0))/\ false = true) => [N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList] |||  true = good-queues(N&37:iNat : B&33:Bit >
    B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)/\ true = inv(N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)]
       [271   | [s &29:iNat : on > &32:BitPacketQueue | &30:BitQueue < on : &31:NeiNatList] ||| ((true =/= all-bits(&30:BitQueue,on)and good-packet-queue(&32:BitPacketQueue,on,s &29:iNat)\/ true =/= &31:NeiNatList ~iNL gen-list(
    &29:iNat)/\ true = &31:NeiNatList ~iNL gen-list(&29:iNat))/\ true = all-bits(&30:BitQueue,on)and good-packet-queue((&27:Bit,&28:iNat); &32:BitPacketQueue,on,s &29:iNat)) => [N&38:iNat : B&34:Bit > B&35:BitPacketQueue | B&36:BitQueue
    < B&33:Bit : N&37:iNatList] |||  true = good-queues(N&38:iNat : B&34:Bit > B&35:BitPacketQueue | B&36:BitQueue < B&33:Bit : N&37:iNatList)/\ true = inv(N&38:iNat : B&34:Bit > B&35:BitPacketQueue | B&36:BitQueue < B&33:Bit :
    N&37:iNatList)]
       [272   | [0 : off > &30:BitPacketQueue | &29:BitQueue < off : nil] |||  true = all-bits(&29:BitQueue,off)and good-packet-queue((&27:Bit,&28:iNat); &30:BitPacketQueue,off,0)/\ true =/= all-bits(&29:BitQueue,off)and
    good-packet-queue(&30:BitPacketQueue,off,0) => [N&36:iNat : B&32:Bit > B&33:BitPacketQueue | B&34:BitQueue < B&31:Bit : N&35:iNatList] |||  true = good-queues(N&36:iNat : B&32:Bit > B&33:BitPacketQueue | B&34:BitQueue < B&31:Bit :
    N&35:iNatList)/\ true = inv(N&36:iNat : B&32:Bit > B&33:BitPacketQueue | B&34:BitQueue < B&31:Bit : N&35:iNatList)]
       [273   | [s &29:iNat : off > &31:BitPacketQueue | &30:BitQueue < off : nil] ||| ((false =/= true \/ true =/= all-bits(&30:BitQueue,off)and good-packet-queue(&31:BitPacketQueue,off,s &29:iNat)/\ true = all-bits(&30:BitQueue,off)and
    good-packet-queue((&27:Bit,&28:iNat); &31:BitPacketQueue,off,s &29:iNat))/\ false = true) => [N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList] |||  true = good-queues(N&37:iNat : B&33:Bit >
    B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)/\ true = inv(N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)]
       [274   | [0 : off > &30:BitPacketQueue | &29:BitQueue < on : nil] ||| ((false =/= true \/ true =/= good-bit-queue(&29:BitQueue,on)and all-packets(&30:BitPacketQueue,off,0)/\ true = good-bit-queue(&29:BitQueue,on)and(((off ~B
    &27:Bit)and(0 ~iN &28:iNat))and all-packets(&30:BitPacketQueue,off,0)))/\ false = true) => [N&36:iNat : B&32:Bit > B&33:BitPacketQueue | B&34:BitQueue < B&31:Bit : N&35:iNatList] |||  true = good-queues(N&36:iNat : B&32:Bit >
    B&33:BitPacketQueue | B&34:BitQueue < B&31:Bit : N&35:iNatList)/\ true = inv(N&36:iNat : B&32:Bit > B&33:BitPacketQueue | B&34:BitQueue < B&31:Bit : N&35:iNatList)]
       [275   | [s &29:iNat : off > &31:BitPacketQueue | &30:BitQueue < on : nil] ||| ((false =/= true \/ true =/= good-bit-queue(&30:BitQueue,on)and all-packets(&31:BitPacketQueue,off,s &29:iNat)/\ true = good-bit-queue(&30:BitQueue,
    on)and(((off ~B &27:Bit)and(&28:iNat ~iN(s &29:iNat)))and all-packets(&31:BitPacketQueue,off,s &29:iNat)))/\ false = true) => [N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList] |||  true =
    good-queues(N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)/\ true = inv(N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)]
       [276   | [0 : on > &30:BitPacketQueue | &29:BitQueue < off : nil] ||| ((false =/= true \/ true =/= good-bit-queue(&29:BitQueue,off)and all-packets(&30:BitPacketQueue,on,0)/\ true = good-bit-queue(&29:BitQueue,off)and(((on ~B
    &27:Bit)and(0 ~iN &28:iNat))and all-packets(&30:BitPacketQueue,on,0)))/\ false = true) => [N&36:iNat : B&32:Bit > B&33:BitPacketQueue | B&34:BitQueue < B&31:Bit : N&35:iNatList] |||  true = good-queues(N&36:iNat : B&32:Bit >
    B&33:BitPacketQueue | B&34:BitQueue < B&31:Bit : N&35:iNatList)/\ true = inv(N&36:iNat : B&32:Bit > B&33:BitPacketQueue | B&34:BitQueue < B&31:Bit : N&35:iNatList)]
       [277   | [s &29:iNat : on > &31:BitPacketQueue | &30:BitQueue < off : nil] ||| ((false =/= true \/ true =/= good-bit-queue(&30:BitQueue,off)and all-packets(&31:BitPacketQueue,on,s &29:iNat)/\ true = good-bit-queue(&30:BitQueue,
    off)and(((on ~B &27:Bit)and(&28:iNat ~iN(s &29:iNat)))and all-packets(&31:BitPacketQueue,on,s &29:iNat)))/\ false = true) => [N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList] |||  true =
    good-queues(N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)/\ true = inv(N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)]
       [278   | [0 : on > &30:BitPacketQueue | &29:BitQueue < on : nil] |||  true = all-bits(&29:BitQueue,on)and good-packet-queue((&27:Bit,&28:iNat); &30:BitPacketQueue,on,0)/\ true =/= all-bits(&29:BitQueue,on)and good-packet-queue(
    &30:BitPacketQueue,on,0) => [N&36:iNat : B&32:Bit > B&33:BitPacketQueue | B&34:BitQueue < B&31:Bit : N&35:iNatList] |||  true = good-queues(N&36:iNat : B&32:Bit > B&33:BitPacketQueue | B&34:BitQueue < B&31:Bit : N&35:iNatList)/\ true
    = inv(N&36:iNat : B&32:Bit > B&33:BitPacketQueue | B&34:BitQueue < B&31:Bit : N&35:iNatList)]
       [279   | [s &29:iNat : on > &31:BitPacketQueue | &30:BitQueue < on : nil] ||| ((false =/= true \/ true =/= all-bits(&30:BitQueue,on)and good-packet-queue(&31:BitPacketQueue,on,s &29:iNat)/\ true = all-bits(&30:BitQueue,on)and
    good-packet-queue((&27:Bit,&28:iNat); &31:BitPacketQueue,on,s &29:iNat))/\ false = true) => [N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList] |||  true = good-queues(N&37:iNat : B&33:Bit >
    B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)/\ true = inv(N&37:iNat : B&33:Bit > B&34:BitPacketQueue | B&35:BitQueue < B&32:Bit : N&36:iNatList)]


---Potentially useful cases

--- (case (N3:iNat : B4:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL9:iNatList) on B4:Bit by (on) U (off) .)
--- (case (N3:iNat : B4:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL9:iNatList) on B8:Bit by (on) U (off) .)
--- (auto .)

--- (case(N3:iNat : B4:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL9:iNatList)on B8:Bit by (on:Bit) U (off:Bit). )

--- (case (N3:iNat : B4:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL9:iNatList) on INL9:iNatList by (nil:iNatList) U (INL10:NeiNatList) .)
--- (case (N3:iNat : B4:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : nil:iNatList) on BPQ5:BitPacketQueue by (nil:BitPacketQueue) U (NBPQ6:NeBitPacketQueue) .)
--- (case (N3:iNat : B4:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL10:NeiNatList) on BPQ5:BitPacketQueue by (nil:BitPacketQueue) U (NBPQ6:NeBitPacketQueue) .)

--- (case(N3:iNat : B4:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL9:iNatList)on BPQ5:BitPacketQueue by(nil:BitPacketQueue)U(BP:BitPacket ; BBPQ:BitPacketQueue). )
--- (case(N3:iNat : B4:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL9:iNatList)on BQ6:BitQueue by(nil:BitQueue)U(B:Bit,BBQ:BitQueue). )

--- (auto .)
---(case 9 on &46:BitPacketQueue by (nil:BitPacketQueue) U (NBPQ:NeBitPacketQueue) .)
---(case 9 on &46:BitPacketQueue by )
---(auto .)

--- (case (N3:iNat : B4:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL9:iNatList) on BPQ5:BitPacketQueue by (nil.BitPacketQueue) U (  (BP:BitPacket) ; (BBPQ:BitPacketQueue) ) .)

--- (split (N1 : B1 > NBPQ1:NeBitPacketQueue | BQ1 < B1' : NL1) by (((on, N:iNat) ; BPQ:BitPacketQueue) ~BPQ (NBPQ1:NeBitPacketQueue)) = (true) and (((off, N:iNat) ; BPQ:BitPacketQueue) ~BPQ (NBPQ1:NeBitPacketQueue)) = (true) .)

---used to generate code for email to stephen
--- (subsume 49 by 48 .)
--- (show-goal-table .)
--- (subsume 50 by 50 .)
--- (show-goal-table .)

---this unification fails b/c Warning: Term B'',BQ is non-ground and unification for its top symbol is not currently supported.
--- unify  (N:iNat : B:Bit > BPQ:BitPacketQueue | B'':Bit , BQ:BitQueue < B':Bit : NL:iNatList) =? (NN:iNat : BB:Bit > BBPPQQ:BitPacketQueue | BBQQ:BitQueue < BB':Bit : NNLL:iNatList) . 
--- same thing happens if we try to unify the general pattern of the term with the left hand side of the addOutput rule


--- (case (N3:iNat : B4:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL9:iNatList) on B4:Bit by (on:Bit) U (off:Bit) .)
--- (case (N3:iNat : B4:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL9:iNatList) on B8:Bit by (on:Bit) U (off:Bit) .)
--- (case (N3:iNat : off:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL9:iNatList) on B8:Bit by (on:Bit) U (off:Bit) .)

--- (case 1 on N1:iNat by (0:iNat) U (s N:iNat) .)

--- (case (N3:iNat : B4:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL9:iNatList) on BQ6:BitQueue by (nil:BitQueue) U (BQ7:NeBitQueue) .)
--- (case (N3:iNat : B4:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL9:iNatList) on BPQ5:BitPacketQueue by (nil:BitPacketQueue) U (BPQ7:NeBitPacketQueue) .)

--- (auto .)

--- (split 16 by (&4:Nat < K:Nat + 1) = (true) and (K:Nat + 1) = (&4:Nat) .)


--- (split 1 by 
---     ((false) = (good-queues(&37:iNat : &38:Bit > &39:BitPacketQueue ; (&38:Bit,&37:iNat) | &40:BitQueue < &41:Bit : &42:iNatList)) /\ (true) = (inv(&37:iNat : &38:Bit > &39:BitPacketQueue | &40:BitQueue < &41:Bit : &42:iNatList)) /\ (true) = (good-queues(&37:iNat : &38:Bit > &39:BitPacketQueue | &40:BitQueue < &41:Bit : &42:iNatList)))
---     and
---     ((false) = (inv(&37:iNat : &38:Bit > &39:BitPacketQueue ; (&38:Bit,&37:iNat) | &40:BitQueue < &41:Bit : &42:iNatList)) /\ (true) = (inv(&37:iNat : &38:Bit > &39:BitPacketQueue | &40:BitQueue < &41:Bit : &42:iNatList)) /\ (true) = (good-queues(&37:iNat : &38:Bit > &39:BitPacketQueue | &40:BitQueue < &41:Bit : &42:iNatList)))
--- .)



--- (split 9 by 
---     (( (false) = (good-queues(&37:iNat : &38:Bit > &39:BitPacketQueue ; (&38:Bit,&37:iNat) | &40:BitQueue < &41:Bit : &42:iNatList)) \/ (false) = (inv(&37:iNat : &38:Bit > &39:BitPacketQueue ; (&38:Bit,&37:iNat) | &40:BitQueue < &41:Bit : &42:iNatList)) /\ (true) = (inv(&37:iNat : &38:Bit > &39:BitPacketQueue | &40:BitQueue < &41:Bit : &42:iNatList))) /\ (true) = (good-queues(&37:iNat : &38:Bit > &39:BitPacketQueue | &40:BitQueue < &41:Bit : &42:iNatList))) = (true)
---     and 
---     (( (false) = (good-queues(&37:iNat : &38:Bit > &39:BitPacketQueue ; (&38:Bit,&37:iNat) | &40:BitQueue < &41:Bit : &42:iNatList)) \/ (false) = (inv(&37:iNat : &38:Bit > &39:BitPacketQueue ; (&38:Bit,&37:iNat) | &40:BitQueue < &41:Bit : &42:iNatList)) /\ (true) = (inv(&37:iNat : &38:Bit > &39:BitPacketQueue | &40:BitQueue < &41:Bit : &42:iNatList))) /\ (true) = (good-queues(&37:iNat : &38:Bit > &39:BitPacketQueue | &40:BitQueue < &41:Bit : &42:iNatList))) = (false)
--- .)



--- (split 9 by (false) = (good-queues(&37:iNat : &38:Bit > &39:BitPacketQueue ;(&38:Bit,&37:iNat)| &40:BitQueue < &41:Bit : &42:iNatList)) and (true) = (good-queues(&37:iNat : &38:Bit > &39:BitPacketQueue ;(&38:Bit,&37:iNat)| &40:BitQueue < &41:Bit : &42:iNatList)) .)
--- (subsume 26 by 27 .)

--- (case (N3:iNat : B4:Bit > nil:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL9:iNatList) on BQ6:BitQueue by (nil:BitQueue) U (BQ7:BitQueue) .)


--- (case (N3:iNat : B4:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL9:iNatList) on BQ6:BitQueue by (nil:BitQueue) U (BQ7:BitQueue) .)
--- (case (N3:iNat : B4:Bit > BPQ5:BitPacketQueue | BQ6:BitQueue < B8:Bit : INL9:iNatList) on INL9:iNatList by (nil:iNatList) U (INL10:NeiNatList) .)
--- (case (N11:iNat : B12:Bit > BPQ13:BitPacketQueue | BQ14:BitQueue < B15:Bit : nil:iNatList) on N11:iNat by (0:iNat) .)
--- (case (N17:iNat : B18:Bit > BPQ19:BitPacketQueue | BQ20:BitQueue < B21:Bit : INL22:NeiNatList) on N17:iNat by (s(0:iNat)) U (s(N23:iNat)) .)

--- (auto .)

